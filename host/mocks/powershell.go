// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/host (interfaces: Powershell)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPowershell is a mock of Powershell interface
type MockPowershell struct {
	ctrl     *gomock.Controller
	recorder *MockPowershellMockRecorder
}

// MockPowershellMockRecorder is the mock recorder for MockPowershell
type MockPowershellMockRecorder struct {
	mock *MockPowershell
}

// NewMockPowershell creates a new mock instance
func NewMockPowershell(ctrl *gomock.Controller) *MockPowershell {
	mock := &MockPowershell{ctrl: ctrl}
	mock.recorder = &MockPowershellMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPowershell) EXPECT() *MockPowershellMockRecorder {
	return m.recorder
}

// Output mocks base method
func (m *MockPowershell) Output(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "Output", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Output indicates an expected call of Output
func (mr *MockPowershellMockRecorder) Output(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Output", reflect.TypeOf((*MockPowershell)(nil).Output), arg0)
}
