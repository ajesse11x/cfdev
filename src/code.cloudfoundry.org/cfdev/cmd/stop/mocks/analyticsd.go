// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/stop (interfaces: AnalyticsD)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAnalyticsD is a mock of AnalyticsD interface
type MockAnalyticsD struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyticsDMockRecorder
}

// MockAnalyticsDMockRecorder is the mock recorder for MockAnalyticsD
type MockAnalyticsDMockRecorder struct {
	mock *MockAnalyticsD
}

// NewMockAnalyticsD creates a new mock instance
func NewMockAnalyticsD(ctrl *gomock.Controller) *MockAnalyticsD {
	mock := &MockAnalyticsD{ctrl: ctrl}
	mock.recorder = &MockAnalyticsDMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAnalyticsD) EXPECT() *MockAnalyticsDMockRecorder {
	return m.recorder
}

// Destroy mocks base method
func (m *MockAnalyticsD) Destroy() error {
	ret := m.ctrl.Call(m, "Destroy")
	ret0, _ := ret[0].(error)
	return ret0
}

// Destroy indicates an expected call of Destroy
func (mr *MockAnalyticsDMockRecorder) Destroy() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockAnalyticsD)(nil).Destroy))
}

// Stop mocks base method
func (m *MockAnalyticsD) Stop() error {
	ret := m.ctrl.Call(m, "Stop")
	ret0, _ := ret[0].(error)
	return ret0
}

// Stop indicates an expected call of Stop
func (mr *MockAnalyticsDMockRecorder) Stop() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockAnalyticsD)(nil).Stop))
}
